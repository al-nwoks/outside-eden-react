name: Run scripts to Test App

on:
  workflow_dispatch:
    inputs:
      seed_name:
        type: choice
        description: The seed name to run
        required: true
        options: 
        - product-code-seed
        - doc-type-seed
        - teams-seed
        - permissions-seed
        - admin-teams-seed
      environment:
        type: choice
        description: Which Environment do you want to seed to?
        options: 
        - dev
        - qa
        - prod
        required: true
      use-default:
        type: boolean
        description: Use Default values
        default: true
        required: true
      dry-run:
        type: boolean
        description: Is this a Dry run?
        default: true
        required: true
      superadmin-name:
        description: (Optional) To specify Super Admin Name
        required: false
      superadmin-email:
        description: (Optional) To specify Super Admin Email
        required: false
      admin-name:
        description: (Optional) To specify Admin Name
        required: false
      admin-email:
        description: (Optional) To specify Admin Email
        required: false
      

concurrency:
  group: ${{ github.job }}-${{ github.ref }}   
  cancel-in-progress: false

# create job to run `npm run 
jobs:
  run_seed_default:
    runs-on: ubuntu-latest
    environment: Development
    if: ${{ (inputs.use-default) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
      - name: Install npm dependencies
        working-directory: ./portal
        run: npm install
          
      - name: "Run seed for Dev"
        if:  ${{ !(inputs.dry-run) && github.event.inputs.environment == 'dev' }}
        working-directory: ./portal
        env:
          DATABASE_URL: postgresql://adminuser:${{ secrets.ENCODED_DEV_DB_PASSWORD }}@npx-dev-psqlflexserver.postgres.database.azure.com:5432/nipex?sslmode=require
          AUTH_RESEND_KEY: ${{ secrets.AUTH_RESEND_KEY }}
          RESEND_FROM_EMAIL: "mailer@accounts.nipex-ng.com"
        run: |
          npm run ${{ github.event.inputs.seed_name }}

      - name: "Run seed for QA"
        if: ${{ !(inputs.dry-run) && github.event.inputs.environment == 'qa' }}
        working-directory: ./portal
        env:
          DATABASE_URL: postgresql://adminuser:${{ secrets.ENCODED_QA_DB_PASSWORD }}@npx-qa-psqlflexserver.postgres.database.azure.com:5432/nipex?sslmode=require
          AUTH_RESEND_KEY: ${{ secrets.AUTH_RESEND_KEY }}
          RESEND_FROM_EMAIL: "mailer@accounts.nipex-ng.com"
        run: |
          npm run ${{ github.event.inputs.seed_name }}

      - name: "Run seed for Prod"
        if: ${{ !(inputs.dry-run) && github.event.inputs.environment == 'prod' }}
        working-directory: ./portal
        env:
          DATABASE_URL: postgresql://adminuser:${{ secrets.ENCODED_PROD_DB_PASSWORD }}@npx-prod-psqlflexserver.postgres.database.azure.com:5432/nipex?sslmode=require
          AUTH_RESEND_KEY: ${{ secrets.AUTH_RESEND_KEY }}
          RESEND_FROM_EMAIL: "mailer@accounts.nipex-ng.com"
        run: |
          npm run ${{ github.event.inputs.seed_name }}


  run_seed_custom:
    runs-on: ubuntu-latest
    environment: Development
    if: ${{ !(inputs.use-default) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
      - name: Install npm dependencies
        working-directory: ./portal
        run: npm install

      - name: "Run seed for Dev"
        if:  ${{ !(inputs.dry-run) && github.event.inputs.environment == 'dev' }}
        working-directory: ./portal
        env:
          DATABASE_URL: postgresql://adminuser:${{ secrets.ENCODED_DEV_DB_PASSWORD }}@npx-dev-psqlflexserver.postgres.database.azure.com:5432/nipex?sslmode=require
          AUTH_RESEND_KEY: ${{ secrets.AUTH_RESEND_KEY }}
          RESEND_FROM_EMAIL: "mailer@accounts.nipex-ng.com"
          ADMIN_NAME: ${{ github.event.inputs.admin-name }}
          ADMIN_EMAIL: ${{ github.event.inputs.admin-email }}
          SUPER_ADMIN_NAME: ${{ github.event.inputs.superadmin-name }}
          SUPER_ADMIN_EMAIL: ${{ github.event.inputs.superadmin-email }}

        run: |
          npm run ${{ github.event.inputs.seed_name }}

      - name: "Run seed for QA"
        if: ${{ !(inputs.dry-run) && github.event.inputs.environment == 'qa' }}
        working-directory: ./portal
        env:
          DATABASE_URL: postgresql://adminuser:${{ secrets.ENCODED_QA_DB_PASSWORD }}@npx-qa-psqlflexserver.postgres.database.azure.com:5432/nipex?sslmode=require
          AUTH_RESEND_KEY: ${{ secrets.AUTH_RESEND_KEY }}
          RESEND_FROM_EMAIL: "mailer@accounts.nipex-ng.com"
          ADMIN_NAME: ${{ github.event.inputs.admin-name }}
          ADMIN_EMAIL: ${{ github.event.inputs.admin-email }}
          SUPER_ADMIN_NAME: ${{ github.event.inputs.superadmin-name }}
          SUPER_ADMIN_EMAIL: ${{ github.event.inputs.superadmin-email }}
        run: |
          npm run ${{ github.event.inputs.seed_name }}
    
      - name: "Run seed for Prod"
        if: ${{ !(inputs.dry-run) && github.event.inputs.environment == 'prod' }}
        working-directory: ./portal
        env:
          DATABASE_URL: postgresql://adminuser:${{ secrets.ENCODED_PROD_DB_PASSWORD }}@npx-prod-psqlflexserver.postgres.database.azure.com:5432/nipex?sslmode=require
          AUTH_RESEND_KEY: ${{ secrets.AUTH_RESEND_KEY }}
          RESEND_FROM_EMAIL: "mailer@accounts.nipex-ng.com"
          ADMIN_NAME: ${{ github.event.inputs.admin-name }}
          ADMIN_EMAIL: ${{ github.event.inputs.admin-email }}
          SUPER_ADMIN_NAME: ${{ github.event.inputs.superadmin-name }}
          SUPER_ADMIN_EMAIL: ${{ github.event.inputs.superadmin-email }}
        run: |
          npm run ${{ github.event.inputs.seed_name }}